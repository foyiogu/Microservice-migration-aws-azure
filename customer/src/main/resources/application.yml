server:
#  port: ${PORT:0} #port passed in arguments otherwise 0
  port: 8080

spring:
  application:
    name: customer
  datasource:
    password: password
    url: jdbc:postgresql://localhost:5432/customer
    username: francis
  jpa:
    hibernate:
      ddl-auto: update
    properties:
      hibernate:
        dialect: org.hibernate.dialect.PostgreSQLDialect
        format_sql: true
    show-sql: true
  config:
    import: optional:configserver:http://localhost:8084
  rabbitmq:
    host: localhost
    port: 5672
    username: guest
    password: guest
  cloud:
    bus:
      enabled: true
      refresh:
        enabled: true
      env:
        enabled: true


eureka:
  client:
    service-url:
      defaultZone: http://localhost:8761/eureka 
    fetch-registry: true
    register-with-eureka: true
  #  for instance to register with eureka, if port is changed to 0 and new instances of ms needs to be spun up
#  instance:
#    instance-id: ${spring.application.name}:${spring.application.instance_id:${random.int}}
#fraud:
#  check:
#    url: http://FRAUD/api/v1/fraud-check/{customerId}
#  delete:
#    url: http://FRAUD/api/v1/fraud-check/delete/{customerId}

management:
  security:
    enabled: false
  endpoint:
    info:
      enabled: true
  endpoints:
    enabled-by-default: true
    web:
      exposure:
        include: "*"
#          - bus-refresh
#          - bus-env
#bus:
#  enabled: true
#  refresh:
#    enabled: true
#  env:
#    enabled: true